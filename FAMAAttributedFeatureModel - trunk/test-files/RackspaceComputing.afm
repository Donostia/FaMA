%Relationships

VM: Instance OS Storage Area TechSpecs Use;

Instance: [1,1]{FirstGen NextGen Performance1Class Performance2Class};
FirstGen: [1,1]{FirstGen256MB FirstGen512MB FirstGen1GB FirstGen2GB FirstGen4GB FirstGen8GB FirstGen15GB FirstGen30GB};
NextGen: [1,1]{NextGen512MB NextGen1GB NextGen2GB NextGen4GB NextGen8GB NextGen15GB NextGen30GB};
Performance1Class: [1,1]{Performance1GB Performance2GB Performance4GB Performance8GB};
Performance2Class: [1,1]{Performance15GB Performance30GB Performance60GB Performance90GB Performance120GB};

OS: [1,1]{LinuxBased WindowsBased};
LinuxBased: [1,1]{Linux RedHatEnterprise Vyatta};
WindowsBased: [1,1]{Windows WindowsSQLWeb WindowsSQLStd};

Storage: [SSD];

Area: [1,1]{NorthAmerica SouthAmerica Europe AsiaOceania};
Use:[PayInAdvance];


%Attributes

VM.cost: Real[0.000 to 100000.000],0,0;
VM.costHour: Real[0.000 to 10.000],0,0;
VM.fixedCost: Real[0.000 to 100000.000],0,0;
VM.discount: Real[0.000 to 100000.000],0,0;
Use.usage: Integer[0 to 720],0,0; ##hours per month
Use.period: Integer[0 to 36],0,0; ##months (0 implies on demand)

Storage.size: Integer[0 to 100000],0,0; ## from 0 GB to 100 TB
TechSpecs.cores: Integer[0 to 32],0,0; ## maximum: 32 cores 
TechSpecs.ram: Real[0.000 to 120.00],0,0; ## from 256 MB to 120 GB

VM.defaultStorage: Integer[0 to 1200],0,0; ## GB
Storage.extraSpace: Integer[0 to 10000],0,0; ## GB
Storage.costGB: Real [0.12 to 0.5],0,0; ## dollars
Storage.cost: Real[0.00 to 50000.00],0,0; ## dollars per month


%Constraints

Windows IMPLIES (NOT Performance1GB);
(Vyatta AND Performance2Class) IMPLIES Performance15GB;

##Tech characteristics##
Performance1GB IMPLIES (TechSpecs.cores==1 AND TechSpecs.ram==1 AND VM.defaultStorage==0);
Performance2GB IMPLIES (TechSpecs.cores==2 AND TechSpecs.ram==2 AND VM.defaultStorage==20);
Performance4GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==4 AND VM.defaultStorage==40);
Performance8GB IMPLIES (TechSpecs.cores==8 AND TechSpecs.ram==8 AND VM.defaultStorage==80);

Performance15GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==15 AND VM.defaultStorage==150);
Performance30GB IMPLIES (TechSpecs.cores==8 AND TechSpecs.ram==30 AND VM.defaultStorage==300);
Performance60GB IMPLIES (TechSpecs.cores==16 AND TechSpecs.ram==60 AND VM.defaultStorage==600);
Performance90GB IMPLIES (TechSpecs.cores==24 AND TechSpecs.ram==90 AND VM.defaultStorage==900);
Performance120GB IMPLIES (TechSpecs.cores==32 AND TechSpecs.ram==120 AND VM.defaultStorage==1200);

FirstGen256MB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==0.256 AND VM.defaultStorage==10);
FirstGen512MB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==0.512 AND VM.defaultStorage==20);
FirstGen1GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==1 AND VM.defaultStorage==40);
FirstGen2GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==2 AND VM.defaultStorage==80);
FirstGen4GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==4 AND VM.defaultStorage==160);
FirstGen8GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==8 AND VM.defaultStorage==320);
FirstGen15GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==15 AND VM.defaultStorage==620);
FirstGen30GB IMPLIES (TechSpecs.cores==8 AND TechSpecs.ram==30 AND VM.defaultStorage==1200);

NextGen512MB IMPLIES (TechSpecs.cores==1 AND TechSpecs.ram==0.512 AND VM.defaultStorage==20);
NextGen1GB IMPLIES (TechSpecs.cores==1 AND TechSpecs.ram==1 AND VM.defaultStorage==40);
NextGen2GB IMPLIES (TechSpecs.cores==2 AND TechSpecs.ram==2 AND VM.defaultStorage==80);
NextGen4GB IMPLIES (TechSpecs.cores==2 AND TechSpecs.ram==4 AND VM.defaultStorage==160);
NextGen8GB IMPLIES (TechSpecs.cores==4 AND TechSpecs.ram==8 AND VM.defaultStorage==320);
NextGen15GB IMPLIES (TechSpecs.cores==6 AND TechSpecs.ram==15 AND VM.defaultStorage==620);
NextGen30GB IMPLIES (TechSpecs.cores==8 AND TechSpecs.ram==30 AND VM.defaultStorage==1200);


##Old gen cost policies##
FirstGen256MB AND Linux IMPLIES VM.costHour==0.015;
FirstGen512MB AND Linux IMPLIES VM.costHour==0.03;
FirstGen1GB AND Linux IMPLIES VM.costHour==0.06;
FirstGen2GB AND Linux IMPLIES VM.costHour==0.12;
FirstGen4GB AND Linux IMPLIES VM.costHour==0.24;
FirstGen8GB AND Linux IMPLIES VM.costHour==0.48;
FirstGen15GB AND Linux IMPLIES VM.costHour==0.96;
FirstGen30GB AND Linux IMPLIES VM.costHour==1.8;

FirstGen512MB AND RedHatEnterprise IMPLIES VM.costHour==0.11;
FirstGen1GB AND RedHatEnterprise IMPLIES VM.costHour==0.14;
FirstGen2GB AND RedHatEnterprise IMPLIES VM.costHour==0.2;
FirstGen4GB AND RedHatEnterprise IMPLIES VM.costHour==0.32;
FirstGen8GB AND RedHatEnterprise IMPLIES VM.costHour==0.56;
FirstGen15GB AND RedHatEnterprise IMPLIES VM.costHour==1.11;
FirstGen30GB AND RedHatEnterprise IMPLIES VM.costHour==1.95;

FirstGen1GB AND Windows IMPLIES VM.costHour==0.08;
FirstGen2GB AND Windows IMPLIES VM.costHour==0.16;
FirstGen4GB AND Windows IMPLIES VM.costHour==0.32;
FirstGen8GB AND Windows IMPLIES VM.costHour==0.58;
FirstGen15GB AND Windows IMPLIES VM.costHour==1.08;
FirstGen30GB AND Windows IMPLIES VM.costHour==2.16;

FirstGen2GB AND WindowsSQLWeb IMPLIES VM.costHour==0.22;
FirstGen4GB AND WindowsSQLWeb IMPLIES VM.costHour==0.38;
FirstGen8GB AND WindowsSQLWeb IMPLIES VM.costHour==0.64;
FirstGen15GB AND WindowsSQLWeb IMPLIES VM.costHour==1.14;
FirstGen30GB AND WindowsSQLWeb IMPLIES VM.costHour==2.25;

FirstGen2GB AND WindowsSQLStd IMPLIES VM.costHour==0.88;
FirstGen4GB AND WindowsSQLStd IMPLIES VM.costHour==1.04;
FirstGen8GB AND WindowsSQLStd IMPLIES VM.costHour==1.3;
FirstGen15GB AND WindowsSQLStd IMPLIES VM.costHour==1.8;
FirstGen30GB AND WindowsSQLStd IMPLIES VM.costHour==3.24;


NextGen512MB AND Linux IMPLIES VM.costHour==0.022;
NextGen1GB AND Linux IMPLIES VM.costHour==0.06;
NextGen2GB AND Linux IMPLIES VM.costHour==0.12;
NextGen4GB AND Linux IMPLIES VM.costHour==0.24;
NextGen8GB AND Linux IMPLIES VM.costHour==0.48;
NextGen15GB AND Linux IMPLIES VM.costHour==0.9;
NextGen30GB AND Linux IMPLIES VM.costHour==1.2;

NextGen512MB AND RedHatEnterprise IMPLIES VM.costHour==0.082;
NextGen1GB AND RedHatEnterprise IMPLIES VM.costHour==0.14;
NextGen2GB AND RedHatEnterprise IMPLIES VM.costHour==0.2;
NextGen4GB AND RedHatEnterprise IMPLIES VM.costHour==0.32;
NextGen8GB AND RedHatEnterprise IMPLIES VM.costHour==0.56;
NextGen15GB AND RedHatEnterprise IMPLIES VM.costHour==1.05;
NextGen30GB AND RedHatEnterprise IMPLIES VM.costHour==1.35;

NextGen1GB AND Windows IMPLIES VM.costHour==0.08;
NextGen2GB AND Windows IMPLIES VM.costHour==0.16;
NextGen4GB AND Windows IMPLIES VM.costHour==0.32;
NextGen8GB AND Windows IMPLIES VM.costHour==0.58;
NextGen15GB AND Windows IMPLIES VM.costHour==1.08;
NextGen30GB AND Windows IMPLIES VM.costHour==1.56;

NextGen2GB AND WindowsSQLWeb IMPLIES VM.costHour==0.22;
NextGen4GB AND WindowsSQLWeb IMPLIES VM.costHour==0.38;
NextGen8GB AND WindowsSQLWeb IMPLIES VM.costHour==0.64;
NextGen15GB AND WindowsSQLWeb IMPLIES VM.costHour==1.14;
NextGen30GB AND WindowsSQLWeb IMPLIES VM.costHour==1.65;

NextGen2GB AND WindowsSQLStd IMPLIES VM.costHour==0.88;
NextGen4GB AND WindowsSQLStd IMPLIES VM.costHour==1.04;
NextGen8GB AND WindowsSQLStd IMPLIES VM.costHour==1.3;
NextGen15GB AND WindowsSQLStd IMPLIES VM.costHour==1.9;
NextGen30GB AND WindowsSQLStd IMPLIES VM.costHour==2.64;


##Cost policies##
Performance1GB  AND Linux IMPLIES VM.costHour==0.04;
Performance2GB  AND Linux IMPLIES VM.costHour==0.08;
Performance4GB  AND Linux IMPLIES VM.costHour==0.16;
Performance8GB  AND Linux IMPLIES VM.costHour==0.32;
Performance2GB  AND Windows IMPLIES VM.costHour==0.10;
Performance4GB  AND Windows IMPLIES VM.costHour==0.20;
Performance8GB  AND Windows IMPLIES VM.costHour==0.40;
Performance2GB  AND WindowsSQLWeb IMPLIES VM.costHour==0.16;
Performance4GB  AND WindowsSQLWeb IMPLIES VM.costHour==0.26;
Performance8GB  AND WindowsSQLWeb IMPLIES VM.costHour==0.52;
Performance2GB  AND WindowsSQLStd IMPLIES VM.costHour==0.70;
Performance4GB  AND WindowsSQLStd IMPLIES VM.costHour==0.80;
Performance8GB  AND WindowsSQLStd IMPLIES VM.costHour==1.60;
Performance1GB  AND RedHatEnterprise IMPLIES VM.costHour==0.12;
Performance2GB  AND RedHatEnterprise IMPLIES VM.costHour==0.16;
Performance4GB  AND RedHatEnterprise IMPLIES VM.costHour==0.24;
Performance8GB  AND RedHatEnterprise IMPLIES VM.costHour==0.47;
Performance1GB  AND Vyatta IMPLIES VM.costHour==0.22;
Performance2GB  AND Vyatta IMPLIES VM.costHour==0.26;
Performance4GB  AND Vyatta IMPLIES VM.costHour==0.34;
Performance8GB  AND Vyatta IMPLIES VM.costHour==0.50;
Performance15GB  AND Linux IMPLIES VM.costHour==0.68;
Performance30GB  AND Linux IMPLIES VM.costHour==1.36;
Performance60GB  AND Linux IMPLIES VM.costHour==2.72;
Performance90GB   AND Linux IMPLIES VM.costHour==4.08;
Performance120GB  AND Linux IMPLIES VM.costHour==5.44;
Performance15GB  AND Windows IMPLIES VM.costHour==0.80;
Performance30GB  AND Windows IMPLIES VM.costHour==1.60;
Performance60GB  AND Windows IMPLIES VM.costHour==3.20;
Performance90GB   AND Windows IMPLIES VM.costHour==4.80;
Performance120GB  AND Windows IMPLIES VM.costHour==6.40;
Performance15GB  AND WindowsSQLWeb IMPLIES VM.costHour==0.86;
Performance30GB  AND WindowsSQLWeb IMPLIES VM.costHour==1.72;
Performance60GB  AND WindowsSQLWeb IMPLIES VM.costHour==3.44;
Performance90GB   AND WindowsSQLWeb IMPLIES VM.costHour==5.16;
Performance120GB  AND WindowsSQLWeb IMPLIES VM.costHour==6.88;
Performance15GB  AND WindowsSQLStd IMPLIES VM.costHour==1.35;
Performance30GB  AND WindowsSQLStd IMPLIES VM.costHour==2.70;
Performance60GB  AND WindowsSQLStd IMPLIES VM.costHour==5.40;
Performance90GB   AND WindowsSQLStd IMPLIES VM.costHour==8.10;
Performance120GB  AND WindowsSQLStd IMPLIES VM.costHour==10.80;
Performance15GB  AND RedHatEnterprise IMPLIES VM.costHour==0.76;
Performance30GB  AND RedHatEnterprise IMPLIES VM.costHour==1.51;
Performance60GB  AND RedHatEnterprise IMPLIES VM.costHour==2.87;
Performance90GB   AND RedHatEnterprise IMPLIES VM.costHour==4.23;
Performance120GB  AND RedHatEnterprise IMPLIES VM.costHour==5.59;
Performance15GB  AND Vyatta IMPLIES VM.costHour==0.86;


##Cost constraints##
VM.cost == VM.costHour*Use.usage + Storage.cost;
Storage.cost == Storage.extraSpace * Storage.costGB;
Storage.size == Storage.extraSpace + VM.defaultStorage;

SSD IMPLIES Storage.costGB == 50;
NOT SSD IMPLIES Storage.costGB == 12;

##Discount policies##

##Volume discount
(Use.period < 6 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.04);
(Use.period < 6 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.08 + 200);
(Use.period < 6 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.12 + 1400);
(Use.period < 6 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.16 + 4400);
(Use.period < 6 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.2 + 12400);

##Commitment discount
((NOT PayInAdvance) AND Use.period >= 6 AND Use.period < 12 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.04);
((NOT PayInAdvance) AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.08 + 200);
((NOT PayInAdvance) AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.12 + 600);
((NOT PayInAdvance) AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.16 + 2400);
((NOT PayInAdvance) AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.2 + 6400);
((NOT PayInAdvance) AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.24 + 16400);

((NOT PayInAdvance) AND Use.period >= 12 AND Use.period < 18 AND VM.cost < 5000) IMPLIES  (VM.discount == VM.cost*0.08);
((NOT PayInAdvance) AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.12 + 400);
((NOT PayInAdvance) AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.16 + 1000);
((NOT PayInAdvance) AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.2 + 3400);
((NOT PayInAdvance) AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.24 + 8400);
((NOT PayInAdvance) AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.28 + 20400);

((NOT PayInAdvance) AND Use.period >= 18 AND Use.period < 24 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.12);
((NOT PayInAdvance) AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.16 + 600);
((NOT PayInAdvance) AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.2 + 1400);
((NOT PayInAdvance) AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.24 + 4400);
((NOT PayInAdvance) AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.28 + 10400);
((NOT PayInAdvance) AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.32 + 24400);

((NOT PayInAdvance) AND Use.period >= 24 AND Use.period < 32 AND VM.cost < 5000) IMPLIES  (VM.discount == VM.cost*0.16);
((NOT PayInAdvance) AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.2 + 800);
((NOT PayInAdvance) AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.24 + 1800);
((NOT PayInAdvance) AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.28 + 5400);
((NOT PayInAdvance) AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.32 + 12400);
((NOT PayInAdvance) AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.36 + 28400);

((NOT PayInAdvance) AND Use.period >= 32 AND VM.cost < 5000) IMPLIES  (VM.discount == VM.cost*0.2);
((NOT PayInAdvance) AND Use.period >= 32 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.24 + 1000);
((NOT PayInAdvance) AND Use.period >= 32 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.28 + 2200);
((NOT PayInAdvance) AND Use.period >= 32 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.32 + 6400);
((NOT PayInAdvance) AND Use.period >= 32 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.36 + 14400);
((NOT PayInAdvance) AND Use.period >= 32 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.4 + 32400);

##Pay in advance discount
(PayInAdvance AND Use.period >= 6 AND Use.period < 12 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.07);
(PayInAdvance AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.11 + 350);
(PayInAdvance AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.15 + 900);
(PayInAdvance AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.19 + 3150);
(PayInAdvance AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.23 + 7900);
(PayInAdvance AND Use.period >= 6 AND Use.period < 12 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.27 + 19400);

(PayInAdvance AND Use.period >= 12 AND Use.period < 18 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.13);
(PayInAdvance AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.17 + 650);
(PayInAdvance AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.21 + 1500);
(PayInAdvance AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.25 + 4650);
(PayInAdvance AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.29 + 20900);
(PayInAdvance AND Use.period >= 12 AND Use.period < 18 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.33 + 25400);

(PayInAdvance AND Use.period >= 18 AND Use.period < 24 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.2);
(PayInAdvance AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.24 + 1000);
(PayInAdvance AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.28 + 2200);
(PayInAdvance AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.32 + 6400);
(PayInAdvance AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.36 + 14400);
(PayInAdvance AND Use.period >= 18 AND Use.period < 24 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.40 + 32400);

(PayInAdvance AND Use.period >= 24 AND Use.period < 32 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.26);
(PayInAdvance AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.3 + 1300);
(PayInAdvance AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.34 + 2800);
(PayInAdvance AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.38 + 7900);
(PayInAdvance AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.42 + 17400);
(PayInAdvance AND Use.period >= 24 AND Use.period < 32 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.46 + 38400);

(PayInAdvance AND Use.period >= 32 AND VM.cost < 5000) IMPLIES (VM.discount == VM.cost*0.35);
(PayInAdvance AND Use.period >= 32 AND VM.cost >= 5000 AND VM.cost < 10000) IMPLIES (VM.discount == (VM.cost - 5000)*0.39 + 1750);
(PayInAdvance AND Use.period >= 32 AND VM.cost >= 10000 AND VM.cost < 25000) IMPLIES (VM.discount == (VM.cost - 10000)*0.43 + 3700);
(PayInAdvance AND Use.period >= 32 AND VM.cost >= 25000 AND VM.cost < 50000) IMPLIES (VM.discount == (VM.cost - 25000)*0.47 + 10150);
(PayInAdvance AND Use.period >= 32 AND VM.cost >= 50000 AND VM.cost < 100000) IMPLIES (VM.discount == (VM.cost - 50000)*0.51 + 21900);
(PayInAdvance AND Use.period >= 32 AND VM.cost >= 100000) IMPLIES (VM.discount == (VM.cost - 100000)*0.55 + 47400);
